---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  releaseName: qbittorrent
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 0.1.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-helm-charts
        namespace: flux-system
  values:
    image:
      repository: ghcr.io/k8s-at-home/qbittorrent
      pullPolicy: IfNotPresent
      tag: v4.4.2
    strategy:
      type: Recreate
    env:
      TZ: America/Chicago
    service:
      main:
        ports:
          http:
            port: 8080
      bittorrent:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: ${SVC_QBIT_IP}
        externalTrafficPolicy: Local
        ports:
          bittorrent:
            enabled: true
            port: 50413
            protocol: TCP
            targetPort: 50413
    ingress:
      main:
        enabled: true
        ingressClassName: nginx-internal
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "pirate"
          hajimari.io/instance: "internal"
          hajimari.io/group: "Media"
        hosts:
          - host: "qbit.k.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "qbit.k.${SECRET_DOMAIN}"
    configmap: 
      scripts: 
        enabled: true
        data:
          31-update-port: |-
            #!/bin/bash
            QBITTORRENT_CONFIGFILE="/config/qBittorrent/qBittorrent.conf"
            INCOMING_PORT=50413

            incoming_port_exist=$(cat ${QBITTORRENT_CONFIGFILE} | grep -m 1 'Connection\\PortRangeMin='${INCOMING_PORT})
            if [[ -z "${incoming_port_exist}" ]]; then
              incoming_exist=$(cat ${QBITTORRENT_CONFIGFILE} | grep -m 1 'Connection\\PortRangeMin')
              if [[ ! -z "${incoming_exist}" ]]; then
                # Get line number of Incoming
                LINE_NUM=$(grep -Fn -m 1 'Connection\PortRangeMin' ${QBITTORRENT_CONFIGFILE} | cut -d: -f 1)
                sed -i "${LINE_NUM}s@.*@Connection\\\PortRangeMin=${INCOMING_PORT}@" ${QBITTORRENT_CONFIGFILE}
              else
                echo "Connection\\PortRangeMin=${INCOMING_PORT}" >> ${QBITTORRENT_CONFIGFILE}
              fi
            fi
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-config
      media:
        enabled: true
        readOnly: false
        mountPath: /nfs-media
        existingClaim: nfs-media-pvc
      qbittorrent-scripts:
        enabled: true
        mountPath: /config/custom-cont-init.d
        type: custom
        volumeSpec:
          configMap:
            name: qbittorrent-scripts
            defaultMode: 511
    podAnnotations:
      backup.velero.io/backup-volumes: config
    podSecurityContext:
      runAsUser: 1001
      runAsGroup: 1001
      fsGroup: 1001
    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 2000Mi
